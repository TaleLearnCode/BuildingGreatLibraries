Package Authoring Best Practices
https://github.com/NuGet/docs.microsoft.com-nuget/blob/main/docs/create-packages/Package-authoring-best-practices.md

Document Coments
https://www.youtube.com/watch?v=pOmw4SzTvPo

Logging in C# .NET Modern-day Practices: The Complete Guide
https://michaelscodingspot.com/logging-in-dotnet/

OPen-Source Library Guidance
https://learn.microsoft.com/en-us/dotnet/standard/library-guidance/

Versioning in C#
https://learn.microsoft.com/en-us/dotnet/csharp/versioning

Design Guidelines for Developing Class Libraries
https://learn.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms229042(v=vs.100)?redirectedfrom=MSDN

C# identifier naming rules and conventions
https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/identifier-names

Common C# Coding Conventions
https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/coding-conventions

Tutorial: Create a .NET class library using Visual Studio
https://learn.microsoft.com/en-us/dotnet/core/tutorials/library-with-visual-studio?pivots=dotnet-7-0

10 C# Class Library Best Practices
https://climbtheladder.com/10-c-class-library-best-practices/#:~:text=10%20C%23%20Class%20Library%20Best%20Practices%201%201.,8.%20Always%20override%20ToString%20%28%29%20...%20More%20items

5 steps to better NuGet package
https://alex-klaus.com/better-nuget/

Package readme on NuGet.org
https://learn.microsoft.com/en-us/NuGet/nuget-org/package-readme-on-nuget-org

Ensuring best practices for NuGet packages
https://www.meziantou.net/ensuring-best-practices-for-nuget-packages.htm

Best Practices for Authoring Private NuGet Packages in the Enterprise
https://blog.inedo.com/nuget/best-practices-internal-nuget-packages/

Package authoring best practices
https://learn.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices

How Do I Organize My Common Libraries Into Projects?
https://www.youtube.com/watch?v=tzc5jxfW1YM

Creating NuGet Packages the easy way with .NET Standard in C#
https://www.youtube.com/watch?v=AF1y9gLcxjQ
















APIs for Beginners 2023 - How to use an API (Full Course / Tutorial)
https://www.youtube.com/watch?v=WXsD0ZgxjRw



In object-oriented programming, a class library is a collection of classes and other reusable software components1234. Developers can import class libraries or their components into their applications and use the prewritten code to carry out specific tasks1. Class libraries contain code for graphical user interface (GUI) elements such as buttons, icons, scroll bars and windows as well as other non-GUI components2. Class libraries are the shared library concept for .NET3. They enable you to componentize useful functionality into modules that can be used by multiple applications3.

A class library is a collection of classes and other reusable software components. Developers can import class libraries or their components into their applications and use the prewritten code to carry out specific tasks. Class libraries contain code for graphical user interface (GUI) elements such as buttons, icons, scroll bars and windows as well as other non-GUI components12. They are the shared library concept for .NET3.

There are many examples of class libraries. For instance, Java System provides pre-defined classes that simplify the job of programmers by providing built-in methods for common and non-trivial tasks. Examples of library classes include the System class in java.lang package of Java Library classes which provides the print () and println () methods for displaying output to user1. In .NET, there are three types of class libraries that you can use: Platform-specific class libraries have access to all the APIs in a given platform (for example,.NET Framework on Windows, Xamarin iOS), but can only be used by apps and libraries that target that platform2.